/* ============================================================================
   MIXINS -> MEDIAQUERY
   ========================================================================= */

/**
 * All the code related to the mq mixin
 */


/// Media query merger
/// Create a single media condition out of a map of queries
/// @param {Map} $queries - Map of media queries
@mixin media($queries) {
    @if length($queries) == 0 {
        @content;
    } @else {
        $first-key: nth(map-keys($queries), 1);

        @media ($first-key: map-get($queries, $first-key)) {
            $queries: map-remove($queries, $first-key);

            @include media($queries) {
                @content;
            }
        }
    }
}

@mixin mq($breakpoint) {
    // Get the query map for $breakpoints map
    $queries: map-get($breakpoints, $breakpoint);

    // If there is no query called $breakpoint in map, throw an error
    @if not $queries {
        @error "No value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
    }

    // Include the media mixin with $queries
    @include media($queries) {
        @content;
    }
}

// Breakpoints tests (only here for reference and ordering)
// Desktop first breakpoint test
.h-breakpoint {
    &:before {
        display: block;
        content: "--xsmall (default --> screen size: 0 - 479px)";
    }

    //@include mq('tall') {
    //  color: green;
    //}

    @include mq('xsmall') {
        &:before {
            content: 'xsmall (default --> screen size: 0 - 479px)';
        }
    }

    @include mq('small') {
        &:before {
            content: "small (default --> screen size: 480px - 599px)";
        }
    }

    @include mq('medium') {
        &:before {
            content: "medium --> screen size: 600px to 767px";
        }
    }

    @include mq('large') {
        &:before {
            content: "large --> screen size: 768px - 1024px";
        }
    }

    @include mq('xlarge') {
        &:before {
            content: "xlarge --> screen size 1025px - 1199px";
        }
    }

    @include mq('xxlarge') {
        &:before {
            content: "xxlarge --> screen size 1200px ++";
        }
    }

}

@mixin breakpoint-label {
    &:before {
        display: block;
        color: white;
        font-size: 12px;
        position: fixed;
        padding: 0 7px;
        font-family: Courier, sans-serif;
        bottom: 0;
        right: 0;
        background-color: rgba(0, 0, 0, .3);
        content: "--small (default --> screen size: 0 - 479px)";
    }

    @include mq('xsmall') {
        &:before {
            content: "xsmall (default --> screen size: 0 - 479px)";
        }
    }

    @include mq('small') {
        &:before {
            content: "small (default --> screen size: 480px - 599px)";
        }
    }

    @include mq('medium') {
        &:before {
            content: "medium --> screen size: 600px to 839px";
        }
    }

    @include mq('large') {
        &:before {
            content: "large --> screen size: 840px - 959px";
        }
    }

    @include mq('xlarge') {
        &:before {
            content: "xlarge --> screen size 960px - 1199px";
        }
    }
    @include mq('xxlarge') {
        &:before {
            content: "xxlarge --> screen size 1200px ++";
        }
    }
}
